{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","redux-logic/types/types.js","helpers/prepareEvents.js","redux-logic/actions/event.js","redux-logic/actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-ES.js","components/calendar/CalendarEvent.js","redux-logic/actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","redux-logic/reducers/authReducer.js","redux-logic/reducers/eventReducer.js","redux-logic/reducers/uiReducer.js","redux-logic/reducers/rootReducer.js","redux-logic/store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handelInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","evento","end","moment","toDate","start","eventClearActive","type","eventAddNew","event","payload","eventUpdate","eventDelete","eventLoad","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","loginValues","handelLoginInputChange","rName","rEmail","rPassword1","rPassword2","registerValues","handelRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","later","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","startDate","setStartDate","endDate","setEndDate","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.555d1923.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handelInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handelInputChange, reset];\n};\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\n  const url = `${baseUrl}/${endpoint}`;\n  if (method === \"GET\") {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nconst fetchConToken = (endpoint, data, method = \"GET\") => {\n  const url = `${baseUrl}/${endpoint}`;\n  const token = localStorage.getItem(\"token\") || \"\";\n\n  if (method === \"GET\") {\n    return fetch(url, {\n      method,\n      headers: { \"x-token\": token },\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: { \"Content-type\": \"application/json\", \"x-token\": token },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport { fetchSinToken, fetchConToken };\n","export const types = {\n  uiOpenModal: \"[ui] Open modal\",\n  uiCloseModal: \"[ui] Close modal\",\n\n  eventSetActive: \"[event] Set active\",\n  eventClearActive: \"[event] Clear active\",\n\n  eventStartAddNew: \"[event] Start add new\",\n  eventAddNew: \"[event] Add new\",\n  eventUpdate: \"[event] Update event\",\n  eventDelete: \"[event] Delete event\",\n  eventLoad: \"[event] Load events\",\n  eventLogout: \"[event] Logout event\",\n\n  authCheckingFinish: \"[auth] Finish checking login state\",\n  authStartLogin: \"[auth] Start login\",\n  authLogin: \"[auth] Login\",\n  authStartRegister: \"[auth] Start register\",\n  authStartTokenRenew: \"[auth] Start token renew\",\n  authLogout: \"[auth] Logout\",\n};\n","import moment from \"moment\";\n\nexport const prepareEvents = (events = []) => {\n    return events.map(\n        (evento) => ({\n            ...evento,\n            end: moment(evento.end).toDate(),\n            start: moment(evento.start).toDate(),\n        })\n    )\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../../helpers/fetch\";\nimport { prepareEvents } from \"../../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventClearActive = () => ({\n  type: types.eventClearActive,\n});\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    \n    const {uid, name} = getState().auth;\n\n    try {\n      const resp = await fetchConToken(\"events\", event, \"POST\");\n      const body = await resp.json();\n\n      if(body.ok){\n        event.id = body.evento.id;\n        event.user = {\n          _id: uid,\n          name: name,\n        }\n\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    \n  }\n}\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\");\n      const body = await resp.json();\n\n      if(body.ok){\n        dispatch(eventUpdate(event));\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nconst eventUpdate = (event) => ({\n  type: types.eventUpdate,\n  payload: event,\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n\n    const {id} = getState().event.activeEvent;\n\n    try {\n      const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\");\n      const body = await resp.json();\n\n      if(body.ok){\n        dispatch(eventDelete());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nconst eventDelete = () => ({\n  type: types.eventDelete,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken(\"events\");\n      const body = await resp.json();\n      const events = prepareEvents(body.eventos);\n      \n      dispatch(eventLoad(events));\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nconst eventLoad = (events) => ({\n  type: types.eventLoad,\n  payload: events,\n})\n\n\nexport const eventLogout = () => ({\n  type: types.eventLogout\n})\n\n","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./event\";\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n      dispatch(login({ uid: body.uid, name: body.name }));\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n    }\n  };\n};\n\nexport const startRegister = (name, email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\n      \"auth/new\",\n      { name, email, password },\n      \"POST\"\n    );\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n      dispatch(login({ uid: body.uid, name: body.name }));\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await fetchConToken(\"auth/renew\");\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n      dispatch(login({ uid: body.uid, name: body.name }));\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish,\n});\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(eventLogout());\n    dispatch(logout());\n  };\n};\n\nconst logout = () => ({\n  type: types.authLogout,\n});\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { startLogin, startRegister } from \"../../redux-logic/actions/auth\";\nimport \"./LoginScreen.css\";\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  const [loginValues, handelLoginInputChange] = useForm({\n    lEmail: \"jdmv161010@gmail.com\",\n    lPassword: \"123456\",\n  });\n\n  const { lEmail, lPassword } = loginValues;\n\n  const [registerValues, handelRegisterInputChange] = useForm({\n    rName: \"David\",\n    rEmail: \"mvjuan97@gmail.com\",\n    rPassword1: \"123456\",\n    rPassword2: \"123456\",\n  });\n\n  const { rName, rEmail, rPassword1, rPassword2 } = registerValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLogin(lEmail, lPassword));\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (rPassword1 !== rPassword2) {\n      Swal.fire(\"Error\", \"Las constraseñas deben ser iguales\", \"error\");\n    }\n\n    dispatch(startRegister(rName, rEmail, rPassword1));\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handelLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handelLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                value={rName}\n                onChange={handelRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                value={rEmail}\n                onChange={handelRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword1\"\n                value={rPassword1}\n                onChange={handelRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Confirma la contraseña\"\n                name=\"rPassword2\"\n                value={rPassword2}\n                onChange={handelRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../redux-logic/actions/auth\";\n\nexport const Navbar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector((state) => state.auth);\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">{name}</span>\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n        <i className=\"fas fa-sign-out-alt\" />\n        <span> Salir</span>\n      </button>\n    </div>\n  );\n};\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from \"react\";\n\nexport const CalendarEvent = ({ event }) => {\n  const { title, user } = event;\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span>- {user.name}</span>\n    </div>\n  );\n};\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n});\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport Swal from \"sweetalert2\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../redux-logic/actions/ui\";\nimport {\n  eventClearActive,\n  eventStartAddNew,\n  eventStartUpdate,\n} from \"../../redux-logic/actions/event\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nModal.setAppElement(\"#root\");\n\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\nconst later = now.clone().add(1, \"hours\");\nconst initEvent = {\n  title: \"\",\n  notes: \"\",\n  start: now.toDate(),\n  end: later.toDate(),\n};\n\nexport const CalendarModal = () => {\n  const dispatch = useDispatch();\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { activeEvent } = useSelector((state) => state.event);\n\n  const [startDate, setStartDate] = useState(now.toDate());\n  const [endDate, setEndDate] = useState(later.toDate());\n\n  const [titleValid, setTitleValid] = useState(true);\n\n  const [formValues, setFormValues] = useState(initEvent);\n\n  const { title, notes, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActive());\n    setFormValues(initEvent);\n  };\n\n  const handleStartDateChange = (e) => {\n    setStartDate(e);\n    setFormValues({\n      ...formValues,\n      start: e,\n    });\n  };\n\n  const handleEndDateChange = (e) => {\n    setEndDate(e);\n    setFormValues({\n      ...formValues,\n      end: e,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire(\n        \"Error en fechas\",\n        \"La fecha y hora fin debe ser mayor a la fecha y hora inicio\",\n        \"error\"\n      );\n    }\n\n    if (title.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    //TODO: Grabar en BD\n\n    if (activeEvent) {\n      dispatch(eventStartUpdate(formValues));\n    } else {\n      dispatch(eventStartAddNew(formValues));\n    }\n    setTitleValid(true);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      //onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n      <h1> {activeEvent ? \"Editar Evento\" : \"Nuevo evento\"} </h1>\n\n      <hr />\n\n      <form className=\"container\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={startDate}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={endDate}\n            minDate={startDate}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid ? \"is-invalid\" : \"is-valid\"\n              }`}\n            placeholder=\"Título del evento\"\n            autoComplete=\"off\"\n            name=\"title\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Información adicional\n          </small>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiOpenModal } from \"../../redux-logic/actions/ui\";\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch();\n\n  const handleAddNewEvent = () => {\n    dispatch(uiOpenModal());\n  };\n\n  return (\n    <button className=\"btn btn-primary fab\" onClick={handleAddNewEvent}>\n      <i className=\"fas fa-plus\"></i>\n    </button>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { eventStartDelete } from \"../../redux-logic/actions/event\";\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n\n  const handleDeleteEvent = () => {\n    dispatch(eventStartDelete());\n  };\n\n  return (\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDeleteEvent}>\n      <i className=\"fas fa-trash\"></i>\n      <span>Borrar Evento</span>\n    </button>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Navbar } from \"../ui/Navbar\";\nimport moment from \"moment\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport { messages } from \"../../helpers/calendar-messages-ES\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiOpenModal } from \"../../redux-logic/actions/ui\";\nimport {\n  eventClearActive,\n  eventSetActive,\n  eventStartLoading,\n} from \"../../redux-logic/actions/event\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"moment/locale/es\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\n\nmoment.locale(\"es\");\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector((state) => state.event);\n  const { uid } = useSelector((state) => state.auth);\n\n  const [lastView, setLastView] = useState(\n    localStorage.getItem(\"lastView\") || \"month\"\n  );\n  \n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch])\n\n  const onDoubleClick = (e) => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelect = (e) => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem(\"lastView\", e);\n  };\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActive());\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n\n    const style = {\n      backgroundColor: (uid === event.user._id) ? \"#367CF7\" : \"#465660\",\n      borderRadius: \"0\",\n      opacity: 0.8,\n      display: \"block\",\n      color: \"white\",\n    };\n    return {\n      style,\n    };\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelect}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        onView={onViewChange}\n        view={lastView}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n      <AddNewFab />\n\n      {activeEvent && <DeleteEventFab />}\n\n      <CalendarModal />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport const PrivateRoute = ({ isLoggedIn, component: Component, ...rest }) => {\n\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport const PublicRoute = ({ isLoggedIn, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isLoggedIn ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { startChecking } from \"../redux-logic/actions/auth\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return <h5>Por favor espere...</h5>;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={LoginScreen}\n            isLoggedIn={!!uid}\n          />\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={CalendarScreen}\n            isLoggedIn={!!uid}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name: null\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      };\n    case types.authLogout:\n      return {\n        checking: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\n// {\n//   id: new Date().getTime(),\n//   title: \"Cumpleaños\",\n//   start: moment().toDate(),\n//   end: moment().add(2, \"hours\").toDate(),\n//   notes: \"Comprar pastesl\",\n//   user: {\n//     _id: \"123\",\n//     name: \"Juan\",\n//   },\n// }\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const eventReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n    case types.eventClearActive:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n    case types.eventUpdate:\n      return {\n        ...state,\n        events: state.events.map((event) =>\n          event.id === action.payload.id ? action.payload : event\n        ),\n      };\n    case types.eventLoad:\n      return{\n        ...state,\n        events: [...action.payload],\n      };\n    case types.eventDelete:\n      return {\n        ...state,\n        events: state.events.filter(\n          (event) => event.id !== state.activeEvent.id\n        ),\n        activeEvent: null,\n      };\n    case types.eventLogout:\n      return {\n        ...initialState,\n      }\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { eventReducer } from \"./eventReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  event: eventReducer,\n  auth: authReducer, \n});\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport { AppRouter } from \"./router/AppRouter\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux-logic/store/store\";\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\nimport \"./styles.css\";\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}